name: Deploy to Cloudflare Pages
on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    env:
      OAUTH_GITHUB_CLIENT_ID: ${{ secrets.OAUTH_GITHUB_CLIENT_ID }}
      OAUTH_GITHUB_CLIENT_SECRET: ${{ secrets.OAUTH_GITHUB_CLIENT_SECRET }}
      CLOUDFLARE_API_KEY: ${{ secrets.CLOUDFLARE_API_KEY }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      CONTACT_EMAIL: ${{ secrets.CONTACT_EMAIL }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get all history
          ref: ${{ github.ref }}  # Use the exact ref that triggered the workflow

      - name: Debug checkout
        run: |
          echo "Current branch: ${{ github.ref }}"
          echo "SHA: ${{ github.sha }}"
          git log -n 1

      - name: Debug environment variables
        run: |
          echo "=== Debugging Environment ==="
          echo "Current directory: $(pwd)"
          echo "Environment variables:"
          env | sort
          echo "=== End Debugging ==="

      - name: Install & build
        env:
          OAUTH_GITHUB_CLIENT_ID: ${{ secrets.OAUTH_GITHUB_CLIENT_ID }}
          OAUTH_GITHUB_CLIENT_SECRET: ${{ secrets.OAUTH_GITHUB_CLIENT_SECRET }}
          CLOUDFLARE_API_KEY: ${{ secrets.CLOUDFLARE_API_KEY }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CONTACT_EMAIL: ${{ secrets.CONTACT_EMAIL }}
          NODE_ENV: production
        run: |
          echo "=== Build Environment ==="
          echo "OAUTH_GITHUB_CLIENT_ID: $OAUTH_GITHUB_CLIENT_ID"
          echo "OAUTH_GITHUB_CLIENT_SECRET: $OAUTH_GITHUB_CLIENT_SECRET"
          echo "CLOUDFLARE_API_KEY: $CLOUDFLARE_API_KEY"
          echo "CLOUDFLARE_ACCOUNT_ID: $CLOUDFLARE_ACCOUNT_ID"
          echo "CONTACT_EMAIL: $CONTACT_EMAIL"
          echo "=== End Build Environment ==="

          # Install all dependencies (including devDependencies)
          npm ci --include=dev
          npm run build          # produces dist/

          # Create .assetsignore in dist directory to prevent uploading _worker.js
          echo "_worker" > dist/.assetsignore

      - name: Install Wrangler
        run: npm install -g wrangler

      - name: Deploy to Cloudflare Worker
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          wrangler deploy --name allura-portfolio-site --env production --assets ./dist